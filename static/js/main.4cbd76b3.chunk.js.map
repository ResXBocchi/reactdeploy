{"version":3,"sources":["pages/Repositories/styled.js","pages/Repositories/index.js","pages/Home/styled.js","pages/Home/index.js","routes.js","App.js","reportWebVitals.js","index.js"],"names":["Container","styled","div","Title","h1","List","ul","ListItem","LinkHome","Link","Repositories","history","useHistory","useState","repositories","setRepositories","useEffect","repositoriesName","localStorage","getItem","JSON","parse","push","map","repository","to","Omni","Input","input","Button","button","Erro","p","App","props","usuario","setUsuario","erro","setErro","name","id","className","value","placeholder","onChange","e","target","type","onClick","axios","get","then","response","data","forEach","setItem","stringify","catch","err","Routes","path","exact","component","Home","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"o4CAGO,IAAMA,EAAYC,IAAOC,IAAV,KAQTC,EAAQF,IAAOG,GAAV,KAOLC,EAAOJ,IAAOK,GAAV,KAUJC,EAAWN,IAAOK,GAAV,KAURE,EAAWP,YAAOQ,IAAPR,CAAH,KAWEA,IAAOC,IAAV,KC5CL,SAASQ,IACpB,IAAMC,EAAUC,cADkB,EAEQC,mBAAS,IAFjB,mBAE1BC,EAF0B,KAEZC,EAFY,KAalC,OAVAC,qBAAU,WACN,IAAIC,EAAmBC,aAAaC,QAAQ,oBACrB,MAApBF,GACCA,EAAmBG,KAAKC,MAAMJ,GAC9BF,EAAgBE,IAEhBN,EAAQW,KAAK,OAElB,IAIC,eAAC,EAAD,WACI,cAAC,EAAD,8BACA,cAAC,EAAD,UAEKR,EAAaS,KAAI,SAAAC,GACd,OACI,eAAC,EAAD,+BAA2BA,EAA3B,YAKZ,cAAC,EAAD,CAAYC,GAAG,IAAf,uB,2iCC3BL,IAAMC,EAAOzB,IAAOC,IAAV,KAMJF,EAAYC,IAAOC,IAAV,KASTyB,EAAO1B,IAAO2B,MAAT,KAeLC,EAAS5B,IAAO6B,OAAV,KAcNC,EAAO9B,IAAO+B,EAAV,KCPFC,MAlCf,SAAaC,GACX,IAAMvB,EAAUC,cADE,EAEcC,mBAAS,IAFvB,mBAEVsB,EAFU,KAEDC,EAFC,OAGQvB,oBAAS,GAHjB,mBAGVwB,EAHU,KAGJC,EAHI,KAoBlB,OACE,eAAC,EAAD,WACA,eAAC,EAAD,WACE,cAAC,EAAD,CAASC,KAAK,UAAUC,GAAG,UAAUC,UAAU,eAAeC,MAAQP,EAAUQ,YAAY,aAAUC,SAAU,SAAAC,GAAC,OAAIT,EAAWS,EAAEC,OAAOJ,UACzI,cAAC,EAAD,CAAUK,KAAK,SAASC,QAnB5B,WACEC,IAAMC,IAAN,uCAA0Cf,EAA1C,WAA2DgB,MAAK,SAAAC,GAC9D,IAAMtC,EAAesC,EAASC,KACxBpC,EAAmB,GACzBH,EAAawC,SAAQ,SAAC9B,GACpBP,EAAiBK,KAAKE,EAAWe,SAEnCrB,aAAaqC,QAAQ,mBAAoBnC,KAAKoC,UAAUvC,IACxDqB,GAAQ,GACR3B,EAAQW,KAAK,oBACZmC,OAAM,SAAAC,GACPpB,GAAQ,OAQR,0BAGF,cAAC,EAAD,UACGD,EAAO,cAAC,EAAD,2CAA0C,SC7BzC,SAASsB,IACpB,OACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWC,IACjC,cAAC,IAAD,CAAOH,KAAK,gBAAgBE,UAAWpD,S,MCCxCuB,MARf,SAAaC,GAGX,OACE,cAACyB,EAAD,KCIaK,EAZO,SAAAC,GAChBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDhBO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4cbd76b3.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const Container = styled.div`\r\n    width:100%;\r\n    max-width:991px;\r\n    margin:0 auto;\r\n    \r\n\r\n`\r\n\r\nexport const Title = styled.h1`\r\n    text-align: center;\r\n    font-size: 2rem;\r\n    font-family: sans-serif;\r\n    color: #333;\r\n`\r\n\r\nexport const List = styled.ul`\r\n    list-style: none;\r\n    padding:0;\r\n    margin:20px;\r\n    font-family:sans-serif;\r\n    text-align:center;\r\n    justify-content: center;\r\n    align-items: center;\r\n    \r\n`\r\nexport const ListItem = styled.ul`\r\n    background:#000;\r\n    padding:.5rem;\r\n    margin: 0 0 .5rem 0;\r\n    color:#fff;\r\n    border-radius:10px;\r\n    max-width:100%;\r\n\r\n    \r\n`\r\nexport const LinkHome = styled(Link)`\r\n    display:block;\r\n    width:4rem;\r\n    text-align:center;\r\n    margin: 2rem auto;\r\n    background-color:#000;\r\n    padding: 0.5rem;\r\n    color:white;\r\n    text-decoration:none;\r\n    border-radius:10px;\r\n`\r\nexport const Content = styled.div`\r\n    width:100%;\r\n    max-width:991px;\r\n    margin:0 auto;\r\n    \r\n\r\n`\r\n","import React, { useEffect, useState } from 'react';\r\nimport * as S from './styled';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\nexport default function Repositories(){\r\n    const history = useHistory();\r\n    const [ repositories, setRepositories ] = useState([]);\r\n    useEffect(() => {\r\n        let repositoriesName = localStorage.getItem('repositoriesName');\r\n        if(repositoriesName != null){\r\n            repositoriesName = JSON.parse(repositoriesName)\r\n            setRepositories(repositoriesName)\r\n        } else {\r\n            history.push('/')\r\n        }\r\n    }, []);\r\n    \r\n    return(\r\n\r\n        <S.Container>\r\n            <S.Title>Repositórios</S.Title>\r\n            <S.List>\r\n                \r\n                {repositories.map(repository => {\r\n                    return(\r\n                        <S.ListItem> Repositório: {repository} </S.ListItem>\r\n                    )\r\n                })}\r\n                \r\n            </S.List>\r\n            <S.LinkHome to='/'>Voltar</S.LinkHome>\r\n        </S.Container>\r\n    )\r\n}","import styled from 'styled-components';\r\n\r\n\r\n\r\nexport const Omni = styled.div`\r\n    margin-top:25%;\r\n    max-width:100vw;\r\n    max-height:100%;\r\n    \r\n`\r\nexport const Container = styled.div`\r\n    width: 100vw;\r\n    height: 3vh;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n`;\r\n\r\nexport const Input= styled.input`\r\n    border: 1px solid #ddd;\r\n    height: 2rem;\r\n    padding: 0 .5rem;\r\n    margin:12px 0 12px 12px;\r\n    border-radius: .25rem 0 0 .25rem;\r\n\r\n    &:focus,\r\n    &:active {\r\n        outline: none;\r\n        box-shadow: none;\r\n    }\r\n\r\n    `;\r\n\r\nexport const Button = styled.button`\r\n    height: 2.1rem;\r\n    border: 1px solid #000;\r\n    background: #000;\r\n    color: #fff;\r\n    border-radius: 0 5px 5px 0;\r\n    \r\n    &:focus,\r\n    &:active {\r\n        outline: none;\r\n        box-shadow: none;\r\n    }\r\n    \r\n    `;\r\nexport const Erro = styled.p`\r\n    color:red;\r\n    font-weight:bolder;\r\n`\r\n","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport * as S from './styled'\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\n\r\nfunction App(props) {\r\n  const history = useHistory();\r\n  const [ usuario, setUsuario ] = useState('');\r\n  const [ erro, setErro ] = useState(false);\r\n\r\n  function handlePesquisa(){\r\n    axios.get(`https://api.github.com/users/${usuario}/repos`).then(response =>{\r\n      const repositories = response.data;\r\n      const repositoriesName = [];\r\n      repositories.forEach((repository) => {\r\n        repositoriesName.push(repository.name);\r\n      });\r\n      localStorage.setItem('repositoriesName', JSON.stringify(repositoriesName));\r\n      setErro(false);\r\n      history.push('/repositories');\r\n    }).catch(err =>{\r\n      setErro(true)\r\n    });\r\n  }\r\n\r\n  return (\r\n    <S.Omni>\r\n    <S.Container>\r\n      <S.Input name='usuario' id='usuario' className='usuarioInput' value={ usuario } placeholder='Usuário' onChange={e => setUsuario(e.target.value) }/>\r\n      <S.Button type='button' onClick={handlePesquisa}>Pesquisar</S.Button>\r\n      \r\n    </S.Container>\r\n    <S.Container>\r\n      {erro ? <S.Erro>Usuário não encontrado</S.Erro> : ''}\r\n    </S.Container>\r\n    </S.Omni>\r\n  );\r\n  }\r\n\r\nexport default App;","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport Repositories from './pages/Repositories';\r\nimport Home from './pages/Home'\r\n\r\n\r\nexport default function Routes() {\r\n    return(\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route path='/' exact component={Home} />\r\n                <Route path='/repositories' component={Repositories} />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n}","import React from 'react';\nimport Routes from './routes';\nimport './style.css';\n\nfunction App(props) {\n\n\n  return (\n    <Routes/>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n      import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n        getCLS(onPerfEntry);\r\n        getFID(onPerfEntry);\r\n        getFCP(onPerfEntry);\r\n        getLCP(onPerfEntry);\r\n        getTTFB(onPerfEntry);\r\n      });\r\n    }\r\n  };\r\n  \r\n  export default reportWebVitals;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}